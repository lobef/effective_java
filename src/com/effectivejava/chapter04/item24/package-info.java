/**
 * 本节学习静态成员类优于非静态成员类
 * 1.嵌套类：指定义在一个类的内部的类，目的是为了给外围类提供服务。
 * 一般分为四种：静态成员类。非静态成员类、匿名类和局部类，后三种还称为内部类
 * 2.静态成员类
 * 1）优势：最简单的一种嵌套类，可以认为是普通类，简单点说是外围类的静态成员，与其他静态成员一样，也遵守同样的访问性规则
 * 如果被声明成私有，只能在外围类内部被访问到。
 * 2）用途：静态成员类常见的用法是作为公有的辅助类，只有与它的外围类一起使用才有意义。可以使用类名点内部类名来引用
 * 3）静态成员类和非静态成员类的区别
 * ①命名区别，静态比非静态多了static
 * ②非静态成员类需要依赖外围类，每个实例都隐含地与外围类的一个外围实例相关联，非静态成员类实例方法的内部可以访问外围实例上的方法
 * 或者利用修饰过的this构造获得外围实例的引用。而静态成员类可以脱离外围类独立存在，没有外围实例时，也可以创建静态成员类的实例
 * ③当非静态成员类的实例被创建时，与外围类的实例关联关系随之建立起来，这种关系消耗空间和增加构造的时间开销
 * ④如果声明成员类不要求访问外围实例，就要始终把修饰符static放在它的声明。这样防止与外围类的实例相关联，增加时间和空间的消耗
 * 3.非静态成员类
 * 非静态成员类的一种常见用法是定义一个适配器，它允许外部类的实例被看作是另一个不相关的类实例，如set和list的迭代器，map获取集合视图
 * 4.匿名类
 * 指没有名字的类，声明和初始化同时进行。在非静态的情况下，才有外围实例。匿名类只能拥有final修饰的变量(这种情况只在java8之前，之后可以不用final修饰了)
 * 常见用法：用于静态工厂方法的内部
 * 5.局部类(com.effectivejava.chapter04.item24.demo.LocalClassDemo)
 * 在任何“可以声明局部变量”的地方都可以声明局部类，局部类可以
 * 总结：四种不同的嵌套类，因情况而定使用哪种类
 * 
 * 
 */
package com.effectivejava.chapter04.item24;